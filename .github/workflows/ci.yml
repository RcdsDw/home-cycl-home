name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ---------------- Frontend ----------------
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Frontend Dependencies
        working-directory: ./home_cycl_home_front
        run: npm install

      - name: Build Frontend
        working-directory: ./home_cycl_home_front
        run: npm run build --verbose

      # ---------------- Backend ----------------
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: mbstring, xml, ctype, iconv, intl, dom, filter, gd, json, pdo, pdo_pgsql

      - name: Install Backend Dependencies
        working-directory: ./home_cycl_home_api_sf
        run: composer install --prefer-dist --no-progress --no-interaction

      # ---------------- Deploy ----------------
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            DEPLOY_DIR=/home/${{ secrets.VPS_USER }}/home_cycl_home_main
            cd "$DEPLOY_DIR"

            # Backup
            mkdir -p "../backups"
            BACKUP_NAME="backup_$(date +%Y%m%d_%H%M%S)"
            rsync -a --exclude='.git' ./ "../backups/$BACKUP_NAME"

            # Backend
            cd "$DEPLOY_DIR/home_cycl_home_api_sf"
            docker compose down
            sudo fuser -k 82/tcp || true
            docker compose up --build -d --remove-orphans
            sleep 10
            docker compose exec backend php bin/console doctrine:migrations:migrate --no-interaction

            # Frontend
            cd "$DEPLOY_DIR/home_cycl_home_front"
            npm install --omit=dev
            npm run build --verbose

            if ! command -v serve &> /dev/null; then
              npm install -g serve
            fi

            if pm2 describe front > /dev/null 2>&1; then
              pm2 restart front
            else
              pm2 start "sh -c 'npx serve -s build -l 4000'" --name front
            fi
          EOF
