name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add SSH known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Update project via Git
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << EOF
            echo "Mise à jour du code..."
            cd /home/${{ secrets.VPS_USER }}/home_cycl_home
            git pull origin main
          EOF

      - name: Deploy backend to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << EOF
            cd /home/${{ secrets.VPS_USER }}/home_cycl_home

            mkdir -p "../backups"
            BACKUP_NAME="backup_$(date +%Y%m%d_%H%M%S)"
            cp -r . "../backups/$BACKUP_NAME"

            echo "Arrêt des conteneurs existants..."
            docker compose down

            echo "Vérification de l'utilisation du port 82..."
            sudo fuser -k 82/tcp

            echo "Build et up des conteneurs..."
            docker compose up --build -d --remove-orphans

            echo "Attente de 10 secondes..."
            sleep 10

            echo "Lancement des migrations..."
            docker compose exec backend php bin/console doctrine:migrations:migrate --no-interaction
          EOF

      - name: Deploy frontend to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << EOF
            cd /home/${{ secrets.VPS_USER }}/home_cycl_home/home_cycl_home_front

            echo "Installation des dépendances front..."
            npm install --omit=dev --verbose

            echo "Build du front React..."
            npm run build --verbose

            echo "Lancement avec PM2..."
            if ! command -v serve &> /dev/null; then
              npm install -g serve
            fi

            if pm2 describe front > /dev/null 2>&1; then
              pm2 restart front
            else
              pm2 start "sh -c 'npx serve -s build -l 4000'" --name front
            fi

            echo "✅ Front déployé avec succès !"
          EOF
